openapi: 3.0.0
info:
  title: Example API
  description: This is a basic example of an OpenAPI document.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Main (production) server
  - url: https://api.staging.example.com
    description: Staging server
paths:
  /users:
    get:
      summary: Get all users
      description: Returns a list of users.
      responses:
        '200': # Noncompliant {{OAR031: Responses must have one or more examples defined}}
          description: A JSON array of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          $ref: >- # Noncompliant {{OAR031: Responses must have one or more examples defined}}
            https://raw.githubusercontent.com/apiaddicts/sonaropenapi-rules/refs/heads/master/src/test/resources/externalRef/OAR031.yaml#/components/responses/server_error_response
  /users/{userId}:
    get:
      summary: Get a user by ID
      description: Returns a single user.
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user to retrieve
          schema:
            type: string
          example:
              name: Puppy
              type: dog
      responses:
        '200': # Noncompliant {{OAR031: Responses must have one or more examples defined}}
          description: A single user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: >- # Noncompliant {{OAR031: Responses must have one or more examples defined}}
            https://raw.githubusercontent.com/apiaddicts/sonaropenapi-rules/refs/heads/master/src/test/resources/externalRef/OAR031.yaml#/components/responses/server_error_response
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          example: '12345'
        name:
          type: string
          example: 'John Doe'
        email:
          type: string
          example: 'john.doe@example.com'
